.border {
  border: $border-width solid $border-color;
}

.border-0 {
  border: 0 !important;
}

//
// Border-radius-------------------------------------------------------------------------------------------------
//

.rounded-sm {
  border-radius: $border-radius-sm !important;
}

.rounded {
  border-radius: $border-radius !important;
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

// Positioning------------------------------------------------------------------------------------------------------

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  //z-index: $zindex-fixed;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  //z-index: $zindex-fixed;
}

//
// Screenreaders------------------------------------------------------------------------------------------
//

//.sr-only {
//  @include sr-only();
//}
//
//.sr-only-focusable {
//  @include sr-only-focusable();
//}

// stylelint-disable declaration-no-important--------------------------------------------------------------

//.shadow-sm {
//  box-shadow: $box-shadow-sm !important;
//}
//
//.shadow {
//  box-shadow: $box-shadow !important;
//}
//
//.shadow-lg {
//  box-shadow: $box-shadow-lg !important;
//}

.shadow-none {
  box-shadow: none !important;
}

// Width and height---------------------------------------------------------------------------------------

//@each $prop, $abbrev in (width: w, height: h) {
//  @each $size, $length in $sizes {
//    .#{$abbrev}-#{$size} {
//      #{$prop}: $length !important;
//    }
//  }
//}

.mw-100 {
  max-width: 100% !important;
}

.mh-100 {
  max-height: 100% !important;
}

// Viewport additional helpers------------------------------------------------------------------------------


.min-vw-100 {
  min-width: 100vw !important;
}

.min-vh-100 {
  min-height: 100vh !important;
}

.vw-100 {
  width: 100vw !important;
}

.vh-100 {
  height: 100vh !important;
}



// stylelint-disable declaration-no-important------------------------------------------------------------------------------------

.align-baseline {
  vertical-align: baseline !important;
}

// Browser default
.align-top {
  vertical-align: top !important;
}

.align-middle {
  vertical-align: middle !important;
}

.align-bottom {
  vertical-align: bottom !important;
}

.align-text-bottom {
  vertical-align: text-bottom !important;
}

.align-text-top {
  vertical-align: text-top !important;
}

// Color and background Classes------------------------------------------------------------------------------------------------------

// Contextual backgrounds

// Contextual Color

@mixin text-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
}

@each $color, $value in $theme-colors {
  @include text-variant(".text-#{$color}", $value);
}


@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color !important;
  }
}

@each $color, $value in $theme-colors {
  @include bg-variant(".bg-#{$color}", $value);
}

//
//.color-primary {
//  color: $primary;
//}
//
//.bgcolor-primary {
//  background-color: $primary;
//}
//
//.color-secondary {
//  color: $secondary;
//}
//
//.bgcolor-secondary {
//  background-color: $secondary;
//}
//
//.color-success {
//  color: $success;
//}
//
//.bgcolor-success {
//  background-color: $success;
//}
//
//.color-danger {
//  color: $danger;
//}
//
//.bgcolor-danger {
//  background-color: $danger;
//}
//
//.color-warning {
//  color: $warning;
//}
//
//.bgcolor-warning {
//  background-color: $warning;
//}
//
//.color-info {
//  color: $info;
//}
//
//.bgcolor-info {
//  background-color: $info;
//}
//
//.color-dark {
//  color: $dark;
//}
//
//.bgcolor-dark {
//  background-color: $dark;
//}

.img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}