//
// Base styles

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: var(--body-color);
  text-align: center;
  text-decoration: var(--link-decoration);
  white-space: $btn-white-space;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  min-height: $btn-standard-hight;
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x,
    $btn-font-size,
    $btn-line-height,
    $btn-border-radius
  );
  @include transition($btn-transition);

  @include hover() {
    color: var(--body-color);
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
    pointer-events: none;
  }

  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

    &:active,
    &.active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }

  &__primary {
    //color: var(--dark);
    background-color: var(--primary);
    border-color: var(--primary);

    &:hover,
    &:focus,
    .focus {
      color: var(--white);
      background-color: var(--primary-hover);
      border-color: var(--primary-hover);
    }
  }

  &__secondary {
    background-color: var(--secondary);
    border-color: var(--secondary);

    &:hover,
    &:focus,
    .focus {
      color: var(--white);
      background-color: var(--secondary-hover);
      border-color: var(--secondary-hover);
    }
  }

  &__success {
    //color: var(--white);
    background-color: var(--success);
    border-color: var(--success);

    &:hover,
    &:focus,
    .focus {
      color: var(--white);
      background-color: var(--success-hover);
      border-color: var(--success-hover);
    }
  }

  &__info {
    //color: var(--dark);
    background-color: var(--info);
    border-color: var(--info);

    &:hover,
    &:focus,
    .focus {
      color: var(--dark);
      background-color: var(--info-hover);
      border-color: var(--info-hover);
    }
  }

  &__warning {
    //color: var(--dark);
    background-color: var(--warning);
    border-color: var(--warning);

    &:hover,
    &:focus,
    .focus {
      color: var(--dark);
      background-color: var(--warning-hover);
      border-color: var(--warning-hover);
    }
  }

  &__danger {
    //color: var(--white);
    background-color: var(--danger);
    border-color: var(--danger);

    &:hover,
    &:focus,
    .focus {
      color: var(--white);
      background-color: var(--danger-hover);
      border-color: var(--danger-hover);
    }
  }

  &__light {
    color: var(--dark);
    background-color: var(--light);
    border-color: var(--light);

    &:hover,
    &:focus,
    .focus {
      color: var(--dark);
      background-color: var(--light-hover);
      border-color: var(--light-hover);
    }
  }

  &__dark {
    color: var(--white);
    background-color: var(--dark);
    border-color: var(--dark);

    &:hover,
    &:focus,
    .focus {
      color: var(--white);
      background-color: var(--dark-hover);
      border-color: var(--dark-hover);
    }
  }

  //Button Utilities
  &__outline {
    background-color: transparent;
    color: var(--dark);
  }

  &--rounded {
    border-radius: $btn-border-radius-rounded !important;
  }

  &--curved {
    border-radius: $btn-border-radius-curved;
  }

  &--link {
    font-weight: var(--font-weight-normal);
    color: var(--link-color);
    text-decoration: var(--link-decoration);

    @include hover() {
      color: var(--link-hover-color);
      text-decoration: var(--link-hover-decoration);
    }

    &:focus,
    &.focus {
      text-decoration: var(--link-hover-decoration);
    }

    &:disabled,
    &.disabled {
      color: $btn-link-disabled-color;
      pointer-events: none;
    }
  }

  &--lg {
    @include button-size(
      $btn-padding-y-lg,
      $btn-padding-x-lg,
      $btn-font-size-lg,
      $btn-line-height,
      $btn-border-radius-lg
    );
  }

  &--sm {
    @include button-size(
      $btn-padding-y-sm,
      $btn-padding-x-sm,
      $btn-font-size-sm,
      $btn-line-height,
      $btn-border-radius-sm
    );
  }

  &__tooltip {
    border-radius: 0;
    border: none;
    padding: 5px;
    min-height: auto;
    background-color: transparent;

    //@include hover() {
    //  background-color: transparent;
    //}
    //
    //&:focus,
    //&.focus {
    //  box-shadow: $btn-focus-box-shadow;
    //}
    &:hover,
    &:focus,
    .focus {
      background-color: transparent;
    }

    &:focus,
    .focus {
      background-color: transparent;
      box-shadow: 0 0 0 0.2rem rgba(166, 166, 169, 0.5);
    }
  }

  &__icon {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: auto;
    padding: 0.5rem 0.5rem;
    font-size: 1rem;
    line-height: 1;
    border-radius: 0;
  }

  &__text + i,
  i + &__text {
    margin-left: 8px;
  }

  i {
    font-style: normal;
    font-size: 1rem;
  }
}

// Disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

// Block button
.btn--block {
  display: block;
  width: 100%;
  // Vertically space out multiple block buttons
  + .btn--block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn--block {
    width: 100%;
  }
}

//@each $color, $value in $theme-colors { //todo : if need to make iteration of classes
//  .btn--#{$color} {
//    background-color: $value;
//    color: var(--light);
//  }
//}
